{"version":3,"sources":["01_main.js"],"names":["document","querySelector","addEventListener","classList","toggle","longArrow","shortArrow","secondArrow","degH","degMS","setInterval","dateNow","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","angleH","angleM","angleS","style","transform","inputH","inputM","inputS","timerHoursArrow","timerMinutesArrow","timerSecondsArrow","tic","ticHAngle","ticMAngle","ticSAngle","timer","timerActive","ticsLeft","startH","value","startM","startS","setTimerArrows","timerTransitionOn","transition","timerTransitionOff","event","isNaN","parseInt","btn","currentTarget","clearInterval","Math","floor","audio","Audio","volume","play"],"mappings":"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","file":"../js/main.min.js","sourcesContent":["'use strict'\r\n\r\n// Theme changer\r\ndocument.querySelector('.header__theme-btn').addEventListener('click', () => {\r\n    document.querySelector('body').classList.toggle('theme-dark');\r\n});\r\n//\r\n\r\n//Clock constants\r\nconst longArrow = document.querySelector('.clock__long-arrow');\r\nconst shortArrow = document.querySelector('.clock__short-arrow');\r\nconst secondArrow = document.querySelector('.clock__second-arrow');\r\n\r\nconst degH = 360 / 12; \r\nconst degMS = 360 / 60;\r\n//\r\n\r\nsetInterval(() => {\r\n    const dateNow = new Date();\r\n    const hours = dateNow.getHours();\r\n    const minutes = dateNow.getMinutes();\r\n    const seconds = dateNow.getSeconds();\r\n    const milliseconds = dateNow.getMilliseconds();\r\n    const angleH = -90 + degH * hours + degH / 60 * minutes + degH / 60 / 60 * seconds;\r\n    const angleM = -90 + degMS * minutes + degMS / 60 * seconds + degMS / 60 / 1000 * milliseconds;\r\n    const angleS = -90 + degMS * seconds + degMS / 1000 * milliseconds;\r\n\r\n    secondArrow.style.transform = `translate(0, -50%) rotate(${angleS}deg)`;\r\n    longArrow.style.transform = `translate(0, -50%) rotate(${angleM}deg)`;\r\n    shortArrow.style.transform = `translate(0, -50%) rotate(${angleH}deg)`;\r\n}, 10);\r\n\r\n// Timer constants\r\nconst inputH = document.querySelector('#HH');\r\nconst inputM = document.querySelector('#MM');\r\nconst inputS = document.querySelector('#SS');\r\n\r\nconst timerHoursArrow = document.querySelector('.timer__hours-arrow');\r\nconst timerMinutesArrow = document.querySelector('.timer__minutes-arrow');\r\nconst timerSecondsArrow = document.querySelector('.timer__seconds-arrow');\r\n\r\nconst tic = 10;\r\nconst ticHAngle = 360 / 12 / 60 / 60 / 1000 * tic;\r\nconst ticMAngle = 360 / 60 / 60 / 1000 * tic;\r\nconst ticSAngle = 360 / 60 / 1000 * tic;\r\n//\r\n\r\nlet timerActive = false;\r\nlet timer;\r\nlet ticsLeft = 0;\r\nlet startH = inputH.value * 60 * 60 * 1000;\r\nlet startM = inputM.value * 60 * 1000;\r\nlet startS = inputS.value * 1000;\r\n\r\nfunction setTimerArrows() {\r\n    timerHoursArrow.style.transform = `translate(0, -50%) rotate(${-90 + (ticsLeft * ticHAngle) % 360}deg)`;\r\n    timerMinutesArrow.style.transform = `translate(0, -50%) rotate(${-90 + (ticsLeft * ticMAngle) % 360}deg)`;\r\n    timerSecondsArrow.style.transform = `translate(0, -50%) rotate(${-90 + (ticsLeft * ticSAngle) % 360}deg)`;\r\n}\r\n\r\nfunction timerTransitionOn() {\r\n    timerHoursArrow.style.transition = '1s';\r\n    timerMinutesArrow.style.transition = '1s';\r\n    timerSecondsArrow.style.transition = '1s';\r\n}\r\n\r\nfunction timerTransitionOff() {\r\n    timerHoursArrow.style.transition = '0s';\r\n    timerMinutesArrow.style.transition = '0s';\r\n    timerSecondsArrow.style.transition = '0s';\r\n}\r\n\r\ninputH.addEventListener('input', (event) => {\r\n    if (!timerActive) {\r\n        if (isNaN(parseInt(inputH.value))) {\r\n            inputH.value = 0;\r\n        }\r\n        else {\r\n            inputH.value = parseInt(inputH.value);\r\n        }\r\n        if (inputH.value > 12) {\r\n            inputH.value = 12;\r\n        }\r\n        startH = inputH.value * 60 * 60 * 1000;\r\n        startM = inputM.value * 60 * 1000;\r\n        startS = inputS.value * 1000;\r\n        ticsLeft = (startH + startM + startS) / tic;\r\n        setTimerArrows();\r\n    }    \r\n});\r\ninputM.addEventListener('input', (event) => {\r\n    if (!timerActive) {\r\n        if (isNaN(parseInt(inputM.value))) {\r\n            inputM.value = 0;\r\n        }\r\n        else {\r\n            inputM.value = parseInt(inputM.value);\r\n        }\r\n        if (inputM.value > 60) {\r\n            inputM.value = 60;\r\n        }\r\n        startH = inputH.value * 60 * 60 * 1000;\r\n        startM = inputM.value * 60 * 1000;\r\n        startS = inputS.value * 1000;\r\n        ticsLeft = (startH + startM + startS) / tic;\r\n        setTimerArrows();\r\n    }\r\n});\r\ninputS.addEventListener('input', (event) => {\r\n    if (!timerActive) {\r\n        if (isNaN(parseInt(inputS.value))) {\r\n            // console.log(parseInt(inputS.value));\r\n            inputS.value = 0;\r\n        }\r\n        else {\r\n            inputS.value = parseInt(inputS.value);\r\n        }\r\n        if (inputS.value > 60) {\r\n            inputS.value = 60;\r\n        }\r\n        startH = inputH.value * 60 * 60 * 1000;\r\n        startM = inputM.value * 60 * 1000;\r\n        startS = inputS.value * 1000;\r\n        ticsLeft = (startH + startM + startS) / tic;\r\n        setTimerArrows();\r\n    }\r\n});\r\n\r\ndocument.querySelector('.input__start').addEventListener('click', (event) => {\r\n    const btn = event.currentTarget;\r\n    if (timerActive) {\r\n        clearInterval(timer);\r\n        timerTransitionOn()\r\n        btn.classList.toggle('stop');\r\n        timerActive = false;\r\n    }\r\n    else {\r\n        timerActive = true;\r\n        btn.classList.toggle('stop');\r\n        timer = setInterval(() => {\r\n            timerTransitionOff();    \r\n            setTimerArrows();\r\n            inputS.value = Math.floor(ticsLeft * tic / 1000) % 60;\r\n            inputM.value = Math.floor(ticsLeft * tic / 1000 / 60) % 60;\r\n            inputH.value = Math.floor(ticsLeft * tic / 1000 / 60 / 60);\r\n            ticsLeft--;\r\n            if (ticsLeft < 0) {\r\n                inputH.value = 0;\r\n                inputM.value = 0;\r\n                inputS.value = 0;\r\n                clearInterval(timer);\r\n                btn.classList.toggle('stop');\r\n                timerTransitionOn();\r\n                timerActive = false;\r\n                // alert(\"Time is up!\");\r\n                var audio = new Audio('../sound/ding.mp3');\r\n                audio.volume = 0.3;\r\n                audio.play();\r\n            }\r\n        }, tic);\r\n    }\r\n});"]}